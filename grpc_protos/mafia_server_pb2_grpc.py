# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import mafia_server_pb2 as mafia__server__pb2


class MafiaServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNotifications = channel.unary_stream(
                '/MafiaServer/GetNotifications',
                request_serializer=mafia__server__pb2.NotificationsRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.NotificationsResponse.FromString,
                )
        self.DisconnectUser = channel.unary_unary(
                '/MafiaServer/DisconnectUser',
                request_serializer=mafia__server__pb2.DisconnectUserRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.Empty.FromString,
                )
        self.SetUserName = channel.unary_unary(
                '/MafiaServer/SetUserName',
                request_serializer=mafia__server__pb2.SetUserNameRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.ConnectedUsers.FromString,
                )
        self.CheckUser = channel.unary_unary(
                '/MafiaServer/CheckUser',
                request_serializer=mafia__server__pb2.CheckUserRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.EndNightResponse.FromString,
                )
        self.SetReadyStatus = channel.unary_unary(
                '/MafiaServer/SetReadyStatus',
                request_serializer=mafia__server__pb2.ReadyRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.ReadyResponse.FromString,
                )
        self.EndDay = channel.unary_unary(
                '/MafiaServer/EndDay',
                request_serializer=mafia__server__pb2.EndDayRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.EndDayResponse.FromString,
                )
        self.SkipNight = channel.unary_unary(
                '/MafiaServer/SkipNight',
                request_serializer=mafia__server__pb2.SkipNightRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.EndNightResponse.FromString,
                )
        self.KillUserVote = channel.unary_unary(
                '/MafiaServer/KillUserVote',
                request_serializer=mafia__server__pb2.KillVoteRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.Empty.FromString,
                )
        self.KillMafiaUser = channel.unary_unary(
                '/MafiaServer/KillMafiaUser',
                request_serializer=mafia__server__pb2.KillMafiaUserRequest.SerializeToString,
                response_deserializer=mafia__server__pb2.EndNightResponse.FromString,
                )


class MafiaServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUserName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetReadyStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndDay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SkipNight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillUserVote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillMafiaUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNotifications': grpc.unary_stream_rpc_method_handler(
                    servicer.GetNotifications,
                    request_deserializer=mafia__server__pb2.NotificationsRequest.FromString,
                    response_serializer=mafia__server__pb2.NotificationsResponse.SerializeToString,
            ),
            'DisconnectUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectUser,
                    request_deserializer=mafia__server__pb2.DisconnectUserRequest.FromString,
                    response_serializer=mafia__server__pb2.Empty.SerializeToString,
            ),
            'SetUserName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUserName,
                    request_deserializer=mafia__server__pb2.SetUserNameRequest.FromString,
                    response_serializer=mafia__server__pb2.ConnectedUsers.SerializeToString,
            ),
            'CheckUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUser,
                    request_deserializer=mafia__server__pb2.CheckUserRequest.FromString,
                    response_serializer=mafia__server__pb2.EndNightResponse.SerializeToString,
            ),
            'SetReadyStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetReadyStatus,
                    request_deserializer=mafia__server__pb2.ReadyRequest.FromString,
                    response_serializer=mafia__server__pb2.ReadyResponse.SerializeToString,
            ),
            'EndDay': grpc.unary_unary_rpc_method_handler(
                    servicer.EndDay,
                    request_deserializer=mafia__server__pb2.EndDayRequest.FromString,
                    response_serializer=mafia__server__pb2.EndDayResponse.SerializeToString,
            ),
            'SkipNight': grpc.unary_unary_rpc_method_handler(
                    servicer.SkipNight,
                    request_deserializer=mafia__server__pb2.SkipNightRequest.FromString,
                    response_serializer=mafia__server__pb2.EndNightResponse.SerializeToString,
            ),
            'KillUserVote': grpc.unary_unary_rpc_method_handler(
                    servicer.KillUserVote,
                    request_deserializer=mafia__server__pb2.KillVoteRequest.FromString,
                    response_serializer=mafia__server__pb2.Empty.SerializeToString,
            ),
            'KillMafiaUser': grpc.unary_unary_rpc_method_handler(
                    servicer.KillMafiaUser,
                    request_deserializer=mafia__server__pb2.KillMafiaUserRequest.FromString,
                    response_serializer=mafia__server__pb2.EndNightResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MafiaServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MafiaServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/MafiaServer/GetNotifications',
            mafia__server__pb2.NotificationsRequest.SerializeToString,
            mafia__server__pb2.NotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/DisconnectUser',
            mafia__server__pb2.DisconnectUserRequest.SerializeToString,
            mafia__server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUserName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/SetUserName',
            mafia__server__pb2.SetUserNameRequest.SerializeToString,
            mafia__server__pb2.ConnectedUsers.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/CheckUser',
            mafia__server__pb2.CheckUserRequest.SerializeToString,
            mafia__server__pb2.EndNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetReadyStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/SetReadyStatus',
            mafia__server__pb2.ReadyRequest.SerializeToString,
            mafia__server__pb2.ReadyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndDay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/EndDay',
            mafia__server__pb2.EndDayRequest.SerializeToString,
            mafia__server__pb2.EndDayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SkipNight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/SkipNight',
            mafia__server__pb2.SkipNightRequest.SerializeToString,
            mafia__server__pb2.EndNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillUserVote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/KillUserVote',
            mafia__server__pb2.KillVoteRequest.SerializeToString,
            mafia__server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillMafiaUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaServer/KillMafiaUser',
            mafia__server__pb2.KillMafiaUserRequest.SerializeToString,
            mafia__server__pb2.EndNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
